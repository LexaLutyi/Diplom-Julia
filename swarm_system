using DifferentialEquations
using LinearAlgebra

using InteractiveUtils

include("test_graph")



"""
Динамика одного робота
"""
A = [0. 1. ;0. 0.]
B = [0. ;1.]
# N_AB = [B A*B]
C = [1. 0.]
# N_CA = [C; C *A]
# Добавить вычисление P
# Q = transpose(A) * P + P * A - 2 * transpose(C)*C
P = [1. -0.5; -0.5 1.]

F = -P^(-1)*transpose(C)
K = [-1. -2.]

# println(eigvals(A + B*K)) [-1. -1.]
# println(eigvals(A + F*C)) [-0.666667+0.471405im, -0.666667-0.471405im]
# println(eigvals([A B*K; -F*C (A + B*K + F*C)]))

"""
Граф
"""
G = [0 1;
     0 0]


function solo(du, u, h, p, t)
    du[:] = [A      B*K;
            -F*C    (A + B*K + F*C)] * u
end

function swarm(du, u, h, p, t)
    du[:] = -u
end

h(p,t) = randn(4 * agents_amt)
u0 = h(nothing, 0)

delay = 0.

tstart = 0.
tend = 10.
tspan = (tstart, tend)
prob = DDEProblem(solo,u0,h,tspan,delay)
sol = solve(prob)


#]add Plots # You need to install Plots.jl before your first time using it!
using Plots
#plotly() # You can optionally choose a plotting backend

#plot(sol, vars=(0,1))
#plot!(sol, vars=(0,2))
plt = plot(sol)
display(plt)
